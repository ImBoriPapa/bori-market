plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    // Asciidoctor 플러그인 적용
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
}

group = 'com.bmarket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    //validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
    //Spring hateoas
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    //webflux
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    //UUID
    implementation "com.fasterxml.uuid:java-uuid-generator:4.0.1"
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    //rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    snippetDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}


bootJar {
    dependsOn asciidoctor
    copy {
        from file("build/docs/asciidoc")
        into file("src/main/resources/static/docs")
    }

}


tasks.named('test') {
    useJUnitPlatform()
}
