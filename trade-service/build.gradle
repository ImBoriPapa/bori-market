buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
	ext {
		set('springCloudVersion', "2021.0.5")
	}
}

plugins {
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bmarket'
version = '1.0.1'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {

	//webflux
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	//spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//h2
	implementation 'com.h2database:h2'
	//mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	//rabbitMq
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	//bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	//actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//Config Client
	implementation("org.springframework.cloud:spring-cloud-starter-config")
	//Eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//MockWebServer
	testImplementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'
	testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.10'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}
